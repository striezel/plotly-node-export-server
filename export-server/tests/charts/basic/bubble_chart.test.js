/*
    Plotly.js offline image export server with Node.js test suite
    Copyright (C) 2024  Dirk Stolle

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

const assert = require('node:assert');
const http = require('node:http');
const { describe, it } = require('node:test');

describe('basic charts, part 5', () => {
  describe('bubble charts', () => {
    it('Marker Size on Bubble Charts', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/bubble-charts/#marker-size-on-bubble-charts example.
      const payload = `{
                         "data": [
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 10, 11, 12, 13 ],
                             "mode": "markers",
                             "marker": {
                               "size": [ 40, 60, 80, 100 ]
                             }
                           }
                         ],
                         "layout": {
                           "title": {
                             "text": "Marker Size"
                           },
                           "showlegend": false,
                           "height": 600,
                           "width": 600
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-2728fb"><g class="clips"><clipPath id="clip2728fbxyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip2728fbx"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip2728fby"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip2728fbxy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip2728fbxyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace95873b" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-2728fb"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Marker Size</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>

          // Current server response is the same, except for random ids.

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-') >= 0);
          assert.ok(body.indexOf('xyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip') > 0);
          assert.ok(body.indexOf('xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Marker Size</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>') > 0);
        });
      });
    });

    it('Marker Size and Color on Bubble Charts', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/bubble-charts/#marker-size-and-color-on-bubble-charts example.
      const payload = `{
                        "data": [
                          {
                            "x": [ 1, 2, 3, 4 ],
                            "y": [ 10, 11, 12, 13 ],
                            "mode": "markers",
                            "marker": {
                              "color": [
                                "rgb(93, 164, 214)",
                                "rgb(255, 144, 14)",
                                "rgb(44, 160, 101)",
                                "rgb(255, 65, 54)"
                              ],
                              "opacity": [ 1, 0.8, 0.6, 0.4 ],
                              "size": [ 40, 60, 80, 100 ]
                            }
                          }
                        ],
                        "layout": {
                          "title": {
                            "text": "Marker Size and Color"
                          },
                          "showlegend": false,
                          "height": 600,
                          "width": 600
                        }
                      }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-285710"><g class="clips"><clipPath id="clip285710xyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip285710x"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip285710y"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip285710xy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip285710xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter traced77f74" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 1; stroke-width: 1px; fill: rgb(93, 164, 214); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.8; stroke-width: 1px; fill: rgb(255, 144, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.6; stroke-width: 1px; fill: rgb(44, 160, 101); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.4; stroke-width: 1px; fill: rgb(255, 65, 54); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-285710"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Marker Size and Color</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>

          // Current server response is the same, except for random ids.

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-') >= 0);
          assert.ok(body.indexOf('xyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip') > 0);
          assert.ok(body.indexOf('xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 1; stroke-width: 1px; fill: rgb(93, 164, 214); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.8; stroke-width: 1px; fill: rgb(255, 144, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.6; stroke-width: 1px; fill: rgb(44, 160, 101); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.4; stroke-width: 1px; fill: rgb(255, 65, 54); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Marker Size and Color</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>') > 0);;
        });
      });
    });

    it('Hover Text on Bubble Charts', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/bubble-charts/#hover-text-on-bubble-charts example.
      const payload = `{
                         "data": [
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 10, 11, 12, 13 ],
                             "text": [
                               "A<br>size: 40",
                               "B<br>size: 60",
                               "C<br>size: 80",
                               "D<br>size: 100"
                             ],
                             "mode": "markers",
                             "marker": {
                               "color": [
                                 "rgb(93, 164, 214)",
                                 "rgb(255, 144, 14)",
                                 "rgb(44, 160, 101)",
                                 "rgb(255, 65, 54)"
                               ],
                               "size": [ 40, 60, 80, 100 ]
                             }
                           }
                         ],
                         "layout": {
                           "title": {
                             "text": "Bubble Chart Hover Text"
                           },
                           "showlegend": false,
                           "height": 600,
                           "width": 600
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-e16bff"><g class="clips"><clipPath id="clipe16bffxyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clipe16bffx"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clipe16bffy"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clipe16bffxy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clipe16bffxyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace5ca50d" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(93, 164, 214); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 144, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 101); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 65, 54); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-e16bff"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Bubble Chart Hover Text</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>

          // Current server response is the same, except for random ids.
          // Obviously, there will be no dynamic hover text in a static image,
          // so this test can only cover the static part of the output.

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"><clipPath id="clip') > 0);
          assert.ok(body.indexOf('xyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('x"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('y"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('xy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(127,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(229.83,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(332.66999999999996,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(435.5,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,474)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,425.58)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,377.17)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,328.75)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,280.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,231.92)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,183.5)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,135.07999999999998)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip') > 0);
          assert.ok(body.indexOf('xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(47,374)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(93, 164, 214); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(149.83,277.17)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 144, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M30,0A30,30 0 1,1 0,-30A30,30 0 0,1 30,0Z"/><path class="point" transform="translate(252.67,180.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 101); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M40,0A40,40 0 1,1 0,-40A40,40 0 0,1 40,0Z"/><path class="point" transform="translate(355.5,83.5)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 65, 54); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(127,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(229.83,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(332.66999999999996,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(435.5,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,474)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,425.58)">10.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,377.17)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,328.75)">11.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,280.33000000000004)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,231.92)">12.5</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,183.5)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,135.07999999999998)">13.5</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-') > 0);
          assert.ok(body.indexOf('"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Bubble Chart Hover Text</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>') > 0);
        });
      });
    });

    it('Bubble Size Scaling on Charts', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/bubble-charts/#bubble-size-scaling-on-charts example.
      const payload = `{
                         "data": [
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 10, 11, 12, 13 ],
                             "text": [
                               "A<br>size: 40",
                               "B<br>size: 60",
                               "C<br>size: 80",
                               "D<br>size: 100"
                             ],
                             "mode": "markers",
                             "marker": {
                               "size": [ 400, 600, 800, 1000 ],
                               "sizemode": "area"
                             }
                           },
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 14, 15, 16, 17 ],
                             "text": [
                               "A</br>size: 40</br>sixeref: 0.2",
                               "B</br>size: 60</br>sixeref: 0.2",
                               "C</br>size: 80</br>sixeref: 0.2",
                               "D</br>size: 100</br>sixeref: 0.2"
                             ],
                             "mode": "markers",
                             "marker": {
                               "size": [ 400, 600, 800, 1000 ],
                               "sizeref": 2,
                               "sizemode": "area"
                             }
                           },
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 20, 21, 22, 23 ],
                             "text": [
                               "A</br>size: 40</br>sixeref: 2",
                               "B</br>size: 60</br>sixeref: 2",
                               "C</br>size: 80</br>sixeref: 2",
                               "D</br>size: 100</br>sixeref: 2"
                             ],
                             "mode": "markers",
                             "marker": {
                               "size": [ 400, 600, 800, 1000 ],
                               "sizeref": 0.2,
                               "sizemode": "area"
                             }
                           },
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 26, 27, 28, 29 ],
                             "text": [
                               "A</br>size: 40</br>sixeref: 1.25",
                               "B</br>size: 60</br>sixeref: 1.25",
                               "C</br>size: 80</br>sixeref: 1.25",
                               "D</br>size: 100</br>sixeref: 1.25"
                             ],
                             "mode": "markers",
                             "marker": {
                               "size": [ 400, 600, 800, 1000 ],
                               "sizeref": 1.25,
                               "sizemode": "area"
                             }
                           }
                         ],
                         "layout": {
                           "title": {
                             "text": "Size Scaling in Bubble Charts"
                           },
                           "showlegend": false,
                           "height": 600,
                           "width": 600
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-7488ce"><g class="clips"><clipPath id="clip7488cexyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip7488cex"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip7488cey"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip7488cexy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(137.36,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(238.94,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(340.52,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(442.1,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,483.19)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,393.76)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,304.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,214.9)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,125.47)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip7488cexyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace638b6f" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,383.19)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M14.14,0A14.14,14.14 0 1,1 0,-14.14A14.14,14.14 0 0,1 14.14,0Z"/><path class="point" transform="translate(158.94,365.3)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M17.32,0A17.32,17.32 0 1,1 0,-17.32A17.32,17.32 0 0,1 17.32,0Z"/><path class="point" transform="translate(260.52,347.42)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(362.1,329.53)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M22.36,0A22.36,22.36 0 1,1 0,-22.36A22.36,22.36 0 0,1 22.36,0Z"/></g><g class="text"/></g><g class="trace scatter trace7cfcc5" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,311.65)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M10,0A10,10 0 1,1 0,-10A10,10 0 0,1 10,0Z"/><path class="point" transform="translate(158.94,293.76)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M12.25,0A12.25,12.25 0 1,1 0,-12.25A12.25,12.25 0 0,1 12.25,0Z"/><path class="point" transform="translate(260.52,275.87)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M14.14,0A14.14,14.14 0 1,1 0,-14.14A14.14,14.14 0 0,1 14.14,0Z"/><path class="point" transform="translate(362.1,257.99)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M15.81,0A15.81,15.81 0 1,1 0,-15.81A15.81,15.81 0 0,1 15.81,0Z"/></g><g class="text"/></g><g class="trace scatter trace05744d" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,204.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M31.62,0A31.62,31.62 0 1,1 0,-31.62A31.62,31.62 0 0,1 31.62,0Z"/><path class="point" transform="translate(158.94,186.45)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M38.73,0A38.73,38.73 0 1,1 0,-38.73A38.73,38.73 0 0,1 38.73,0Z"/><path class="point" transform="translate(260.52,168.56)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M44.72,0A44.72,44.72 0 1,1 0,-44.72A44.72,44.72 0 0,1 44.72,0Z"/><path class="point" transform="translate(362.1,150.67)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g><g class="trace scatter traced27f48" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,97.02)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M12.65,0A12.65,12.65 0 1,1 0,-12.65A12.65,12.65 0 0,1 12.65,0Z"/><path class="point" transform="translate(158.94,79.13)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M15.49,0A15.49,15.49 0 1,1 0,-15.49A15.49,15.49 0 0,1 15.49,0Z"/><path class="point" transform="translate(260.52,61.25)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M17.89,0A17.89,17.89 0 1,1 0,-17.89A17.89,17.89 0 0,1 17.89,0Z"/><path class="point" transform="translate(362.1,43.36)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(137.36,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(238.94,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(340.52,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(442.1,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,483.19)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,393.76)">15</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,304.33000000000004)">20</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,214.9)">25</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,125.47)">30</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-7488ce"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Size Scaling in Bubble Charts</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>

          // Current server response is the same, except for random ids.

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="600" height="600" style="" viewBox="0 0 600 600"><rect x="0" y="0" width="600" height="600" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"><clipPath id="clip') > 0);
          assert.ok(body.indexOf('xyplot" class="plotclip"><rect width="440" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('x"><rect x="80" y="0" width="440" height="600"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('y"><rect x="0" y="100" width="600" height="420"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('xy"><rect x="80" y="100" width="440" height="420"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(137.36,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(238.94,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(340.52,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(442.1,0)" d="M0,100v420" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,483.19)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,393.76)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,304.33000000000004)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,214.9)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,125.47)" d="M80,0h440" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip') > 0);
          assert.ok(body.indexOf('xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,383.19)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M14.14,0A14.14,14.14 0 1,1 0,-14.14A14.14,14.14 0 0,1 14.14,0Z"/><path class="point" transform="translate(158.94,365.3)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M17.32,0A17.32,17.32 0 1,1 0,-17.32A17.32,17.32 0 0,1 17.32,0Z"/><path class="point" transform="translate(260.52,347.42)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/><path class="point" transform="translate(362.1,329.53)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M22.36,0A22.36,22.36 0 1,1 0,-22.36A22.36,22.36 0 0,1 22.36,0Z"/></g><g class="text"/></g><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,311.65)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M10,0A10,10 0 1,1 0,-10A10,10 0 0,1 10,0Z"/><path class="point" transform="translate(158.94,293.76)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M12.25,0A12.25,12.25 0 1,1 0,-12.25A12.25,12.25 0 0,1 12.25,0Z"/><path class="point" transform="translate(260.52,275.87)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M14.14,0A14.14,14.14 0 1,1 0,-14.14A14.14,14.14 0 0,1 14.14,0Z"/><path class="point" transform="translate(362.1,257.99)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M15.81,0A15.81,15.81 0 1,1 0,-15.81A15.81,15.81 0 0,1 15.81,0Z"/></g><g class="text"/></g><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,204.33)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M31.62,0A31.62,31.62 0 1,1 0,-31.62A31.62,31.62 0 0,1 31.62,0Z"/><path class="point" transform="translate(158.94,186.45)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M38.73,0A38.73,38.73 0 1,1 0,-38.73A38.73,38.73 0 0,1 38.73,0Z"/><path class="point" transform="translate(260.52,168.56)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M44.72,0A44.72,44.72 0 1,1 0,-44.72A44.72,44.72 0 0,1 44.72,0Z"/><path class="point" transform="translate(362.1,150.67)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M50,0A50,50 0 1,1 0,-50A50,50 0 0,1 50,0Z"/></g><g class="text"/></g><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(57.36,97.02)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M12.65,0A12.65,12.65 0 1,1 0,-12.65A12.65,12.65 0 0,1 12.65,0Z"/><path class="point" transform="translate(158.94,79.13)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M15.49,0A15.49,15.49 0 1,1 0,-15.49A15.49,15.49 0 0,1 15.49,0Z"/><path class="point" transform="translate(260.52,61.25)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M17.89,0A17.89,17.89 0 1,1 0,-17.89A17.89,17.89 0 0,1 17.89,0Z"/><path class="point" transform="translate(362.1,43.36)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M20,0A20,20 0 1,1 0,-20A20,20 0 0,1 20,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(137.36,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(238.94,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(340.52,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="533" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(442.1,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,483.19)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,393.76)">15</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,304.33000000000004)">20</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,214.9)">25</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,125.47)">30</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs') > 0);
          assert.ok(body.indexOf('"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="300" y="50" text-anchor="middle" dy="0em">Size Scaling in Bubble Charts</text></g><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>') > 0);
        });
      });
    });

    it('Marker Size, Color, and Symbol as an Array', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/bubble-charts/#marker-size-color-and-symbol-as-an-array example.
      const payload = `{
                         "data": [
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 10, 11, 12, 13 ],
                             "mode": "markers",
                             "marker": {
                               "color": [
                                 "hsl(0,100,40)",
                                 "hsl(33,100,40)",
                                 "hsl(66,100,40)",
                                 "hsl(99,100,40)"
                               ],
                               "size": [ 12, 22, 32, 42 ],
                               "opacity": [ 0.6, 0.7, 0.8, 0.9 ]
                             },
                             "type": "scatter"
                           },
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 11, 12, 13, 14 ],
                             "mode": "markers",
                             "marker": {
                               "color": "rgb(31, 119, 180)",
                               "size": 18,
                               "symbol": [ "circle", "square", "diamond", "cross" ]
                             },
                             "type": "scatter"
                           },
                           {
                             "x": [ 1, 2, 3, 4 ],
                             "y": [ 12, 13, 14, 15 ],
                             "mode": "markers",
                             "marker": {
                               "size": 18,
                               "line": {
                                 "color": [
                                   "rgb(120,120,120)",
                                   "rgb(120,120,120)",
                                   "red",
                                   "rgb(120,120,120)"
                                 ],
                                 "width": [ 2, 2, 6, 2 ]
                               }
                             },
                             "type": "scatter"
                           }
                         ],
                         "layout": {
                           "showlegend": false
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-563826"><g class="clips"><clipPath id="clip563826xyplot" class="plotclip"><rect width="540" height="270"/></clipPath><clipPath class="axesclip" id="clip563826x"><rect x="80" y="0" width="540" height="450"/></clipPath><clipPath class="axesclip" id="clip563826y"><rect x="0" y="100" width="700" height="270"/></clipPath><clipPath class="axesclip" id="clip563826xy"><rect x="80" y="100" width="540" height="270"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(118.25,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(193,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(267.75,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(342.5,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(417.25,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(492,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(566.75,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,349)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,304.15)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,259.3)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,214.45)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,169.6)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,124.75)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip563826xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter tracee85460" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,249)" style="opacity: 0.6; stroke-width: 1px; fill: rgb(204, 0, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M6,0A6,6 0 1,1 0,-6A6,6 0 0,1 6,0Z"/><path class="point" transform="translate(187.75,204.15)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(204, 112, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M11,0A11,11 0 1,1 0,-11A11,11 0 0,1 11,0Z"/><path class="point" transform="translate(337.25,159.3)" style="opacity: 0.8; stroke-width: 1px; fill: rgb(184, 204, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M16,0A16,16 0 1,1 0,-16A16,16 0 0,1 16,0Z"/><path class="point" transform="translate(486.75,114.45)" style="opacity: 0.9; stroke-width: 1px; fill: rgb(71, 204, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M21,0A21,21 0 1,1 0,-21A21,21 0 0,1 21,0Z"/></g><g class="text"/></g><g class="trace scatter tracef74c64" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,204.15)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(187.75,159.3)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M9,9H-9V-9H9Z"/><path class="point" transform="translate(337.25,114.45)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M11.7,0L0,11.7L-11.7,0L0,-11.7Z"/><path class="point" transform="translate(486.75,69.6)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M10.8,3.6H3.6V10.8H-3.6V3.6H-10.8V-3.6H-3.6V-10.8H3.6V-3.6H10.8Z"/></g><g class="text"/></g><g class="trace scatter trace01e692" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,159.3)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(187.75,114.45)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(337.25,69.6)" style="opacity: 1; stroke-width: 6px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 0, 0); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(486.75,24.75)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(118.25,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(193,0)">1.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(267.75,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(342.5,0)">2.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(417.25,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(492,0)">3.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(566.75,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,349)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,304.15)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,259.3)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,214.45)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,169.6)">14</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,124.75)">15</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-563826"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"/><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>

          // Current server response is the same, except for random ids.

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-') >= 0);
          assert.ok(body.indexOf('xyplot" class="plotclip"><rect width="540" height="270"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="0" width="540" height="450"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="0" y="100" width="700" height="270"/></clipPath><clipPath class="axesclip" id="clip') > 0);
          assert.ok(body.indexOf('<rect x="80" y="100" width="540" height="270"/></clipPath></g><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"><g class="subplot xy"><g class="layer-subplot"><g class="shapelayer"/><g class="imagelayer"/></g><g class="minor-gridlayer"><g class="x"/><g class="y"/></g><g class="gridlayer"><g class="x"><path class="xgrid crisp" transform="translate(118.25,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(193,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(267.75,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(342.5,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(417.25,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(492,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="xgrid crisp" transform="translate(566.75,0)" d="M0,100v270" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g><g class="y"><path class="ygrid crisp" transform="translate(0,349)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,304.15)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,259.3)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,214.45)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,169.6)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/><path class="ygrid crisp" transform="translate(0,124.75)" d="M80,0h540" style="stroke: rgb(238, 238, 238); stroke-opacity: 1; stroke-width: 1px;"/></g></g><g class="zerolinelayer"/><g class="layer-between"><g class="shapelayer"/><g class="imagelayer"/></g><path class="xlines-below"/><path class="ylines-below"/><g class="overlines-below"/><g class="xaxislayer-below"/><g class="yaxislayer-below"/><g class="overaxes-below"/><g class="overplot"><g class="xy" transform="translate(80,100)" clip-path="url(#clip') > 0);
          assert.ok(body.indexOf('xyplot)"><g class="scatterlayer mlayer"><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,249)" style="opacity: 0.6; stroke-width: 1px; fill: rgb(204, 0, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M6,0A6,6 0 1,1 0,-6A6,6 0 0,1 6,0Z"/><path class="point" transform="translate(187.75,204.15)" style="opacity: 0.7; stroke-width: 1px; fill: rgb(204, 112, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M11,0A11,11 0 1,1 0,-11A11,11 0 0,1 11,0Z"/><path class="point" transform="translate(337.25,159.3)" style="opacity: 0.8; stroke-width: 1px; fill: rgb(184, 204, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M16,0A16,16 0 1,1 0,-16A16,16 0 0,1 16,0Z"/><path class="point" transform="translate(486.75,114.45)" style="opacity: 0.9; stroke-width: 1px; fill: rgb(71, 204, 0); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M21,0A21,21 0 1,1 0,-21A21,21 0 0,1 21,0Z"/></g><g class="text"/></g><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,204.15)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(187.75,159.3)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M9,9H-9V-9H9Z"/><path class="point" transform="translate(337.25,114.45)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M11.7,0L0,11.7L-11.7,0L0,-11.7Z"/><path class="point" transform="translate(486.75,69.6)" style="opacity: 1; stroke-width: 0px; fill: rgb(31, 119, 180); fill-opacity: 1;" d="M10.8,3.6H3.6V10.8H-3.6V3.6H-10.8V-3.6H-3.6V-10.8H3.6V-3.6H10.8Z"/></g><g class="text"/></g><g class="trace scatter trace') > 0);
          assert.ok(body.indexOf('" style="stroke-miterlimit: 2; opacity: 1;"><g class="fills"/><g class="errorbars"/><g class="lines"/><g class="points"><path class="point" transform="translate(38.25,159.3)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(187.75,114.45)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(337.25,69.6)" style="opacity: 1; stroke-width: 6px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 0, 0); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/><path class="point" transform="translate(486.75,24.75)" style="opacity: 1; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(120, 120, 120); stroke-opacity: 1;" d="M9,0A9,9 0 1,1 0,-9A9,9 0 0,1 9,0Z"/></g><g class="text"/></g></g></g></g><path class="xlines-above crisp" style="fill: none;" d="M0,0"/><path class="ylines-above crisp" style="fill: none;" d="M0,0"/><g class="overlines-above"/><g class="xaxislayer-above"><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(118.25,0)">1</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(193,0)">1.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(267.75,0)">2</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(342.5,0)">2.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(417.25,0)">3</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(492,0)">3.5</text></g><g class="xtick"><text text-anchor="middle" x="0" y="383" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(566.75,0)">4</text></g></g><g class="yaxislayer-above"><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,349)">10</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,304.15)">11</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,259.3)">12</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,214.45)">13</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,169.6)">14</text></g><g class="ytick"><text text-anchor="end" x="79" y="4.199999999999999" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre; opacity: 1;" transform="translate(0,124.75)">15</text></g></g><g class="overaxes-above"/></g></g><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><defs id="topdefs-') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"/><g class="g-xtitle"/><g class="g-ytitle"/></g></svg>') > 0);
        });
      });
    });

/*
    it('request with different data', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      const payload = '{ "x": ["2013-10-04 22:23:00", "2013-11-04 22:23:00", "2013-12-04 22:23:00"], "y": [1, 3, 6], "type": "scatter" }';
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));
          assert.ok(body.indexOf('width="700"') > 0);
          assert.ok(body.indexOf('height="400"') > 0);
        });
      });
    });
    */
  });
});
