const assert = require('node:assert');
const http = require('node:http');
const { describe, it } = require('node:test');

describe('basic charts, part 9', () => {
  describe('sunburst charts', () => {
    it('Basic Sunburst Chart', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/sunburst-charts/#basic-sunburst-chart example.
      const payload = `{
                         "data": [
                           {
                             "type": "sunburst",
                             "labels": [ "Eve", "Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura" ],
                             "parents": [ "", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve" ],
                             "values": [ 10, 14, 12, 10, 2, 6, 6, 4, 4 ],
                             "outsidetextfont": {
                               "size": 20,
                               "color": "#377eb8"
                             },
                             "leaf": {
                               "opacity": 0.4
                             },
                             "marker": {
                               "line": {
                                 "width": 2
                               }
                             }
                           }
                         ],
                         "layout": {
                           "margin": { "l": 0, "r": 0, "b": 0, "t": 0 },
                           "width": 500,
                           "height": 500
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="500" height="500" style="" viewBox="0 0 500 500"><rect x="0" y="0" width="500" height="500" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-582e87"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"><g class="trace sunburst" stroke-linejoin="round" style="opacity: 1;"><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(0, 0, 0); fill-opacity: 0; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M250,250A0,0 0,1,0 250,250A0,0 0,1,0 250,250ZM333.3333333333333,250A83.33333333333333,83.33333333333333 0,1,1 166.66666666666669,250A83.33333333333333,83.33333333333333 0,1,1 333.3333333333333,250.00000000000003Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 20px; fill: rgb(55, 126, 184); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(250,257)">Eve</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M333.3333333333333,250L416.66666666666663,250A166.66666666666666,166.66666666666666 0,0,0 149.56089393679062,116.99712878662675L199.78044696839532,183.49856439331336A83.33333333333333,83.33333333333333 0,0,1 333.3333333333333,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(305.716974037497,142.10458858061722)">Seth</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M199.78044696839532,183.49856439331336L149.56089393679062,116.99712878662675A166.66666666666666,166.66666666666666 0,0,0 94.58796176594069,310.20694436452544L172.29398088297035,280.10347218226275A83.33333333333333,83.33333333333333 0,0,1 199.78044696839532,183.49856439331336Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(129.7714741688273,219.79212624098963)">Cain</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M172.29398088297035,280.10347218226275L94.58796176594069,310.20694436452544A166.66666666666666,166.66666666666666 0,0,0 204.3895016546528,410.3042738621365L227.1947508273264,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 172.29398088297035,280.10347218226275Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(165.78844127269596,346.3761146525824)">Awan</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M227.1947508273264,330.15213693106824L204.3895016546528,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 295.61049834534714,410.3042738621365L272.80524917267354,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 227.1947508273264,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(249.99999999999997,384.85617464415304)">Abel</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(148, 103, 189); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M272.80524917267354,330.15213693106824L295.61049834534714,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 350.43910606320935,383.0028712133733L300.2195530316047,316.50143560668664A83.33333333333333,83.33333333333333 0,0,1 272.80524917267354,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(312.7582372018329,380.0350096426641)">Azura</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M416.66666666666663,250L500,250A250,250 0,0,0 400.6586590948141,50.49569317994013L350.4391060632094,116.99712878662675A166.66666666666666,166.66666666666666 0,0,1 416.66666666666663,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(436.4925507298958,161.1378425465545)">Enos</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M350.4391060632094,116.99712878662675L400.6586590948141,50.49569317994013A250,250 0,0,0 361.4345889441346,26.209177161234408L324.2897259627564,100.80611810748962A166.66666666666666,166.66666666666666 0,0,1 350.4391060632094,116.99712878662675Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(370.49057319943427,59.40104261846014)">Noam</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2px; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M94.58796176594069,310.20694436452544L16.881942648911007,340.3104165467882A250,250 0,0,0 65.24777069483514,418.4239109116392L126.83184712989011,362.28260727442614A166.66666666666666,166.66666666666666 0,0,1 94.58796176594069,310.20694436452544Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(70.43981371628294,365.1789603615555)">Enoch</text></g></g></g></g><g class="glimages"/><defs id="topdefs-582e87"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"/></g></svg>

          // Current server response is functionally the same, although font is a few pixels higher.
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="500" height="500" style="" viewBox="0 0 500 500"><rect x="0" y="0" width="500" height="500" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-1f386f"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"><g class="trace sunburst" stroke-linejoin="round" style="opacity: 1;"><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(0, 0, 0); fill-opacity: 0; stroke: rgb(255, 255, 255); stroke-opacity: 1; fill-opacity: 0;" d="M250,250A0,0 0,1,0 250,250A0,0 0,1,0 250,250ZM333.3333333333333,250A83.33333333333333,83.33333333333333 0,1,1 166.66666666666669,250A83.33333333333333,83.33333333333333 0,1,1 333.3333333333333,250.00000000000003Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 20px; fill: rgb(55, 126, 184); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(250,250)">Eve</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M333.3333333333333,250L416.66666666666663,250A166.66666666666666,166.66666666666666 0,0,0 149.56089393679062,116.99712878662675L199.78044696839532,183.49856439331336A83.33333333333333,83.33333333333333 0,0,1 333.3333333333333,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(305.7172944720673,138.10458858061722)">Seth</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M199.78044696839532,183.49856439331336L149.56089393679062,116.99712878662675A166.66666666666666,166.66666666666666 0,0,0 94.58796176594069,310.20694436452544L172.29398088297035,280.10347218226275A83.33333333333333,83.33333333333333 0,0,1 199.78044696839532,183.49856439331336Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(129.7717946033976,215.79212624098963)">Cain</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M172.29398088297035,280.10347218226275L94.58796176594069,310.20694436452544A166.66666666666666,166.66666666666666 0,0,0 204.3895016546528,410.3042738621365L227.1947508273264,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 172.29398088297035,280.10347218226275Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(165.78804454418034,342.3761146525824)">Awan</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M227.1947508273264,330.15213693106824L204.3895016546528,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 295.61049834534714,410.3042738621365L272.80524917267354,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 227.1947508273264,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(249.99999999999997,380.85617464415304)">Abel</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(148, 103, 189); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M272.80524917267354,330.15213693106824L295.61049834534714,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 350.43910606320935,383.0028712133733L300.2195530316047,316.50143560668664A83.33333333333333,83.33333333333333 0,0,1 272.80524917267354,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(312.75797780241885,376.0350096426641)">Azura</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M416.66666666666663,250L500,250A250,250 0,0,0 400.6586590948141,50.49569317994013L350.4391060632094,116.99712878662675A166.66666666666666,166.66666666666666 0,0,1 416.66666666666663,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(436.492352365638,157.1378425465545)">Enos</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M350.4391060632094,116.99712878662675L400.6586590948141,50.49569317994013A250,250 0,0,0 361.4345889441346,26.209177161234408L324.2897259627564,100.80611810748962A166.66666666666666,166.66666666666666 0,0,1 350.4391060632094,116.99712878662675Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(370.49057319943427,55.40104261846014)">Noam</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M94.58796176594069,310.20694436452544L16.881942648911007,340.3104165467882A250,250 0,0,0 65.24777069483514,418.4239109116392L126.83184712989011,362.28260727442614A166.66666666666666,166.66666666666666 0,0,1 94.58796176594069,310.20694436452544Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(70.43981371628294,361.1789603615555)">Enoch</text></g></g></g></g><g class="glimages"/><defs id="topdefs-1f386f"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"/></g></svg>

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="500" height="500" style="" viewBox="0 0 500 500"><rect x="0" y="0" width="500" height="500" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"><g class="trace sunburst" stroke-linejoin="round" style="opacity: 1;"><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(0, 0, 0); fill-opacity: 0; stroke: rgb(255, 255, 255); stroke-opacity: 1; fill-opacity: 0;" d="M250,250A0,0 0,1,0 250,250A0,0 0,1,0 250,250ZM333.3333333333333,250A83.33333333333333,83.33333333333333 0,1,1 166.66666666666669,250A83.33333333333333,83.33333333333333 0,1,1 333.3333333333333,250.00000000000003Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 20px; fill: rgb(55, 126, 184); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(250,250)">Eve</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M333.3333333333333,250L416.66666666666663,250A166.66666666666666,166.66666666666666 0,0,0 149.56089393679062,116.99712878662675L199.78044696839532,183.49856439331336A83.33333333333333,83.33333333333333 0,0,1 333.3333333333333,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(305.7172944720673,138.10458858061722)">Seth</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(255, 127, 14); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M199.78044696839532,183.49856439331336L149.56089393679062,116.99712878662675A166.66666666666666,166.66666666666666 0,0,0 94.58796176594069,310.20694436452544L172.29398088297035,280.10347218226275A83.33333333333333,83.33333333333333 0,0,1 199.78044696839532,183.49856439331336Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(129.7717946033976,215.79212624098963)">Cain</text></g></g><g class="slice cursor-pointer"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1;" d="M172.29398088297035,280.10347218226275L94.58796176594069,310.20694436452544A166.66666666666666,166.66666666666666 0,0,0 204.3895016546528,410.3042738621365L227.1947508273264,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 172.29398088297035,280.10347218226275Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(165.78804454418034,342.3761146525824)">Awan</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(214, 39, 40); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M227.1947508273264,330.15213693106824L204.3895016546528,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 295.61049834534714,410.3042738621365L272.80524917267354,330.15213693106824A83.33333333333333,83.33333333333333 0,0,1 227.1947508273264,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(249.99999999999997,380.85617464415304)">Abel</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(148, 103, 189); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M272.80524917267354,330.15213693106824L295.61049834534714,410.3042738621365A166.66666666666666,166.66666666666666 0,0,0 350.43910606320935,383.0028712133733L300.2195530316047,316.50143560668664A83.33333333333333,83.33333333333333 0,0,1 272.80524917267354,330.15213693106824Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(312.75797780241885,376.0350096426641)">Azura</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M416.66666666666663,250L500,250A250,250 0,0,0 400.6586590948141,50.49569317994013L350.4391060632094,116.99712878662675A166.66666666666666,166.66666666666666 0,0,1 416.66666666666663,250Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(436.492352365638,157.1378425465545)">Enos</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(31, 119, 180); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M350.4391060632094,116.99712878662675L400.6586590948141,50.49569317994013A250,250 0,0,0 361.4345889441346,26.209177161234408L324.2897259627564,100.80611810748962A166.66666666666666,166.66666666666666 0,0,1 350.4391060632094,116.99712878662675Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(370.49057319943427,55.40104261846014)">Noam</text></g></g><g class="slice"><path class="surface" style="pointer-events: none; stroke-width: 2; fill: rgb(44, 160, 44); fill-opacity: 1; stroke: rgb(255, 255, 255); stroke-opacity: 1; opacity: 0.4;" d="M94.58796176594069,310.20694436452544L16.881942648911007,340.3104165467882A250,250 0,0,0 65.24777069483514,418.4239109116392L126.83184712989011,362.28260727442614A166.66666666666666,166.66666666666666 0,0,1 94.58796176594069,310.20694436452544Z"/><g class="slicetext"><text data-notex="1" class="slicetext" text-anchor="middle" style="font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(255, 255, 255); fill-opacity: 1; white-space: pre;" x="0" y="0" transform="translate(70.43981371628294,361.1789603615555)">Enoch</text></g></g></g></g><g class="glimages"/><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"/></g></svg>') > 0);
        });
      });
    });

    // TODO: Branchvalues - https://plotly.com/javascript/sunburst-charts/#branchvalues
    // TODO: Sunburst with Repeated Labels - https://plotly.com/javascript/sunburst-charts/#sunburst-with-repeated-labels
    // TODO: Large Number of Slices - https://plotly.com/javascript/sunburst-charts/#large-number-of-slices
    // TODO: Control Text Orientation Inside Sunburst Chart Sectors - https://plotly.com/javascript/sunburst-charts/#control-text-orientation-inside-sunburst-chart-sectors

/*
    it('request with different data', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      const payload = '{ "x": ["2013-10-04 22:23:00", "2013-11-04 22:23:00", "2013-12-04 22:23:00"], "y": [1, 3, 6], "type": "scatter" }';
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));
          assert.ok(body.indexOf('width="700"') > 0);
          assert.ok(body.indexOf('height="400"') > 0);
        });
      });
    });
    */
  });
});
