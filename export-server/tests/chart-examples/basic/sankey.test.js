const assert = require('node:assert');
const http = require('node:http');
const { describe, it } = require('node:test');

describe('basic charts, part 10', () => {
  describe('sankey diagrams', () => {
    it('Basic Sankey Diagram', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/sankey-diagram/#basic-sankey-diagram example.
      const payload = `{
                         "data": [
                           {
                             "type": "sankey",
                             "orientation": "h",
                             "node": {
                               "pad": 15,
                               "thickness": 30,
                               "line": {
                                 "color": "black",
                                 "width": 0.5
                               },
                               "label": [ "A1", "A2", "B1", "B2", "C1", "C2" ],
                               "color": [ "blue", "blue", "blue", "blue", "blue", "blue" ]
                             },
                             "link": {
                               "source": [ 0, 1, 0, 2, 3, 3 ],
                               "target": [ 2, 3, 3, 4, 4, 5 ],
                               "value": [ 8, 4, 2, 8, 4, 2 ]
                             }
                           }
                         ],
                         "layout": {
                           "title": {
                             "text": "Basic Sankey"
                           },
                           "font": {
                             "size": 10
                           }
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-36383f"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricprecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M30,1.2789769243681803e-13C142.5,1.2789769243681803e-13 142.5,4.689582056016661e-13 255,4.689582056016661e-13L255,145.71428571428618C142.5,145.71428571428618 142.5,145.71428571428584 30,145.71428571428584Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M30,197.14285714285717C142.5,197.14285714285717 142.5,197.14285714285757 255,197.14285714285757L255,270.00000000000045C142.5,270.00000000000045 142.5,270.00000000000006 30,270.00000000000006Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M30,145.71428571428586C142.5,145.71428571428586 142.5,160.71428571428612 255,160.71428571428612L255,197.14285714285757C142.5,197.14285714285757 142.5,182.1428571428573 30,182.1428571428573Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M285,4.689582056016661e-13C397.5,4.689582056016661e-13 397.5,-1.4210854715202004e-14 510,-1.4210854715202004e-14L510,145.71428571428572C397.5,145.71428571428572 397.5,145.71428571428618 285,145.71428571428618Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M285,160.71428571428612C397.5,160.71428571428612 397.5,145.71428571428567 510,145.71428571428567L510,218.57142857142856C397.5,218.57142857142856 397.5,233.571428571429 285,233.571428571429Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M285,233.57142857142898C397.5,233.57142857142898 397.5,233.57142857142858 510,233.57142857142858L510,270C397.5,270 397.5,270.0000000000004 285,270.0000000000004Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="182.14285714285705" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,94.57142857142853)">A1</text></g><g class="sankey-node" transform="translate(0.000,197.143)" style="opacity: 1;"><rect class="node-rect" width="30" height="72.8571428571428" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,39.9285714285714)">A2</text></g><g class="sankey-node" transform="translate(255.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="145.71428571428567" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,76.35714285714283)">B1</text></g><g class="sankey-node" transform="translate(255.000,160.714)" style="opacity: 1;"><rect class="node-rect" width="30" height="109.28571428571388" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,58.14285714285694)">B2</text></g><g class="sankey-node" transform="translate(510.000,-0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="218.5714285714286" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,112.7857142857143)">C1</text></g><g class="sankey-node" transform="translate(510.000,233.571)" style="opacity: 1;"><rect class="node-rect" width="30" height="36.428571428571416" style="stroke-width: 0.5px; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,21.714285714285708)">C2</text></g></g></g><defs id="topdefs-36383f"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Basic Sankey</text></g><g class="first-render"/></g></svg>

          // Current server response is visually the same.
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-911250"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,1.2789769243681803e-13C142.5,1.2789769243681803e-13 142.5,4.689582056016661e-13 255,4.689582056016661e-13L255,145.71428571428618C142.5,145.71428571428618 142.5,145.71428571428584 30,145.71428571428584Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,197.14285714285717C142.5,197.14285714285717 142.5,197.14285714285757 255,197.14285714285757L255,270.00000000000045C142.5,270.00000000000045 142.5,270.00000000000006 30,270.00000000000006Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,145.71428571428586C142.5,145.71428571428586 142.5,160.71428571428612 255,160.71428571428612L255,197.14285714285757C142.5,197.14285714285757 142.5,182.1428571428573 30,182.1428571428573Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,4.689582056016661e-13C397.5,4.689582056016661e-13 397.5,-1.4210854715202004e-14 510,-1.4210854715202004e-14L510,145.71428571428572C397.5,145.71428571428572 397.5,145.71428571428618 285,145.71428571428618Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,160.71428571428612C397.5,160.71428571428612 397.5,145.71428571428567 510,145.71428571428567L510,218.57142857142856C397.5,218.57142857142856 397.5,233.571428571429 285,233.571428571429Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,233.57142857142898C397.5,233.57142857142898 397.5,233.57142857142858 510,233.57142857142858L510,270C397.5,270 397.5,270.0000000000004 285,270.0000000000004Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="182.14285714285705" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,94.57142857142853)">A1</text></g><g class="sankey-node" transform="translate(0.000,197.143)" style="opacity: 1;"><rect class="node-rect" width="30" height="72.8571428571428" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,39.9285714285714)">A2</text></g><g class="sankey-node" transform="translate(255.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="145.71428571428567" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,76.35714285714283)">B1</text></g><g class="sankey-node" transform="translate(255.000,160.714)" style="opacity: 1;"><rect class="node-rect" width="30" height="109.28571428571388" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,58.14285714285694)">B2</text></g><g class="sankey-node" transform="translate(510.000,-0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="218.5714285714286" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,112.7857142857143)">C1</text></g><g class="sankey-node" transform="translate(510.000,233.571)" style="opacity: 1;"><rect class="node-rect" width="30" height="36.428571428571416" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,21.714285714285708)">C2</text></g></g></g><defs id="topdefs-911250"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Basic Sankey</text></g><g class="first-render"/></g></svg>

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,1.2789769243681803e-13C142.5,1.2789769243681803e-13 142.5,4.689582056016661e-13 255,4.689582056016661e-13L255,145.71428571428618C142.5,145.71428571428618 142.5,145.71428571428584 30,145.71428571428584Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,197.14285714285717C142.5,197.14285714285717 142.5,197.14285714285757 255,197.14285714285757L255,270.00000000000045C142.5,270.00000000000045 142.5,270.00000000000006 30,270.00000000000006Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M30,145.71428571428586C142.5,145.71428571428586 142.5,160.71428571428612 255,160.71428571428612L255,197.14285714285757C142.5,197.14285714285757 142.5,182.1428571428573 30,182.1428571428573Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,4.689582056016661e-13C397.5,4.689582056016661e-13 397.5,-1.4210854715202004e-14 510,-1.4210854715202004e-14L510,145.71428571428572C397.5,145.71428571428572 397.5,145.71428571428618 285,145.71428571428618Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,160.71428571428612C397.5,160.71428571428612 397.5,145.71428571428567 510,145.71428571428567L510,218.57142857142856C397.5,218.57142857142856 397.5,233.571428571429 285,233.571428571429Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M285,233.57142857142898C397.5,233.57142857142898 397.5,233.57142857142858 510,233.57142857142858L510,270C397.5,270 397.5,270.0000000000004 285,270.0000000000004Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="182.14285714285705" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,94.57142857142853)">A1</text></g>') > 0);
          assert.ok(body.indexOf('<g class="sankey-node" transform="translate(0.000,197.143)" style="opacity: 1;"><rect class="node-rect" width="30" height="72.8571428571428" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,39.9285714285714)">A2</text></g><g class="sankey-node" transform="translate(255.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="145.71428571428567" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,76.35714285714283)">B1</text></g><g class="sankey-node" transform="translate(255.000,160.714)" style="opacity: 1;"><rect class="node-rect" width="30" height="109.28571428571388" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(33.25,58.14285714285694)">B2</text></g><g class="sankey-node" transform="translate(510.000,-0.000)" style="opacity: 1;"><rect class="node-rect" width="30" height="218.5714285714286" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,112.7857142857143)">C1</text></g><g class="sankey-node" transform="translate(510.000,233.571)" style="opacity: 1;"><rect class="node-rect" width="30" height="36.428571428571416" style="stroke-width: 0.5; stroke: rgb(0, 0, 0); stroke-opacity: 1; fill: rgb(0, 0, 255); fill-opacity: 1;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,21.714285714285708)">C2</text></g></g></g><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Basic Sankey</text></g><g class="first-render"/></g></svg>') > 0);
        });
      });
    });

    it('Define Node Position', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/sankey-diagram/#define-node-position example.
      const payload = `{
                         "data": [
                           {
                             "type": "sankey",
                             "arrangement": "snap",
                             "node": {
                               "label": [ "A", "B", "C", "D", "E", "F" ],
                               "x": [ 0.2, 0.1, 0.5, 0.7, 0.3, 0.5 ],
                               "y": [ 0.7, 0.5, 0.2, 0.4, 0.2, 0.3 ],
                               "pad": 10
                             },
                             "link": {
                               "source": [ 0, 0, 1, 2, 5, 4, 3, 5 ],
                               "target": [ 5, 3, 4, 3, 0, 2, 2, 3 ],
                               "value": [ 1, 2, 1, 1, 1, 1, 1, 2 ]
                             }
                           }
                         ],
                         "layout": {
                           "title": "Sankey with manually positioned node",
                           "width": 720,
                           "height": 520
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="720" height="520" style="" viewBox="0 0 720 520"><rect x="0" y="0" width="720" height="520" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-bd769e"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricprecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M122,214.9210292812777C196,214.9210292812777 196,93.38598047914819 270,93.38598047914819L270,108.77196095829636C196,108.77196095829636 196,230.3070097604259 122,230.3070097604259Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M122,230.30700976042587C252,230.30700976042587 252,143.6929902395741 382,143.6929902395741L382,174.46495119787045C252,174.46495119787045 252,261.07897071872225 122,261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M66,162.3070097604259C112,162.3070097604259 112,60.307009760425906 158,60.307009760425906L158,75.69299023957409C112,75.69299023957409 112,177.6929902395741 66,177.6929902395741Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M290,52.61401952085181C336,52.61401952085181 336,97.53504880212955 382,97.53504880212955L382,112.92102928127773C336,112.92102928127773 336,68 290,68Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M 102 245.69299023957404 L97 245.69299023957404A25.38598047914818 25.38598047914818 0 0 0 71.61401952085183 271.07897071872225L71.61401952085183 276.07897071872225A25.38598047914818 25.38598047914818 0 0 0 97 301.46495119787045L295 301.46495119787045A25.38598047914818 25.38598047914818 0 0 0 320.3859804791482 276.07897071872225L320.3859804791482 149.54392191659275A25.38598047914818 25.38598047914818 0 0 0 295 124.15794143744456L290 124.15794143744456L290 139.54392191659275L295 139.54392191659275A10 10 0 0 1 305 149.54392191659275L305 276.07897071872225A10 10 0 0 1 295 286.07897071872225L97 286.07897071872225A10 10 0 0 1 87 276.07897071872225L87 271.07897071872225A10 10 0 0 1 97 261.07897071872225L102 261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M178,60.307009760425906C224,60.307009760425906 224,68 270,68L270,83.38598047914817C224,83.38598047914817 224,75.69299023957409 178,75.69299023957409Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M 270 68 L265 68A25.38598047914818 25.38598047914818 0 0 1 239.6140195208518 42.61401952085181L239.6140195208518 37.61401952085181A25.38598047914818 25.38598047914818 0 0 1 265 12.228039041703632L407 12.228039041703632A25.38598047914818 25.38598047914818 0 0 1 432.3859804791482 37.61401952085181L432.3859804791482 87.53504880212955A25.38598047914818 25.38598047914818 0 0 1 407 112.92102928127773L402 112.92102928127773L402 97.53504880212955L407 97.53504880212955A10 10 0 0 0 417 87.53504880212955L417 37.61401952085181A10 10 0 0 0 407 27.614019520851812L265 27.614019520851812A10 10 0 0 0 255 37.61401952085181L255 42.61401952085181A10 10 0 0 0 265 52.61401952085181L270 52.61401952085181Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M290,93.38598047914819C336,93.38598047914819 336,112.92102928127774 382,112.92102928127774L382,143.6929902395741C336,143.6929902395741 336,124.15794143744456 290,124.15794143744456Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(102.000,214.921)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744455" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.278970718722274)">A</text></g><g class="sankey-node" transform="translate(46.000,162.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148202" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.8929902395741)">B</text></g><g class="sankey-node" transform="translate(270.000,52.614)" style="opacity: 1;"><rect class="node-rect" width="20" height="30.771960958296376" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,19.585980479148187)">C</text></g><g class="sankey-node" transform="translate(382.000,97.535)" style="opacity: 1;"><rect class="node-rect" width="20" height="76.9299023957409" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,42.66495119787045)">D</text></g><g class="sankey-node" transform="translate(158.000,60.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148174" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.892990239574086)">E</text></g><g class="sankey-node" transform="translate(270.000,93.386)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744456" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.27897071872228)">F</text></g></g></g><defs id="topdefs-bd769e"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="360" y="50" text-anchor="middle" dy="0em">Sankey with manually positioned node</text></g><g class="first-render"/></g></svg>

          // Current server response is visually the same.
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="720" height="520" style="" viewBox="0 0 720 520"><rect x="0" y="0" width="720" height="520" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-e83112"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M122,214.9210292812777C196,214.9210292812777 196,93.38598047914819 270,93.38598047914819L270,108.77196095829636C196,108.77196095829636 196,230.3070097604259 122,230.3070097604259Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M122,230.30700976042587C252,230.30700976042587 252,143.6929902395741 382,143.6929902395741L382,174.46495119787045C252,174.46495119787045 252,261.07897071872225 122,261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M66,162.3070097604259C112,162.3070097604259 112,60.307009760425906 158,60.307009760425906L158,75.69299023957409C112,75.69299023957409 112,177.6929902395741 66,177.6929902395741Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M290,52.61401952085181C336,52.61401952085181 336,97.53504880212955 382,97.53504880212955L382,112.92102928127773C336,112.92102928127773 336,68 290,68Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M 102 245.69299023957404 L97 245.69299023957404A25.38598047914818 25.38598047914818 0 0 0 71.61401952085183 271.07897071872225L71.61401952085183 276.07897071872225A25.38598047914818 25.38598047914818 0 0 0 97 301.46495119787045L295 301.46495119787045A25.38598047914818 25.38598047914818 0 0 0 320.3859804791482 276.07897071872225L320.3859804791482 149.54392191659275A25.38598047914818 25.38598047914818 0 0 0 295 124.15794143744456L290 124.15794143744456L290 139.54392191659275L295 139.54392191659275A10 10 0 0 1 305 149.54392191659275L305 276.07897071872225A10 10 0 0 1 295 286.07897071872225L97 286.07897071872225A10 10 0 0 1 87 276.07897071872225L87 271.07897071872225A10 10 0 0 1 97 261.07897071872225L102 261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M178,60.307009760425906C224,60.307009760425906 224,68 270,68L270,83.38598047914817C224,83.38598047914817 224,75.69299023957409 178,75.69299023957409Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M 270 68 L265 68A25.38598047914818 25.38598047914818 0 0 1 239.6140195208518 42.61401952085181L239.6140195208518 37.61401952085181A25.38598047914818 25.38598047914818 0 0 1 265 12.228039041703632L407 12.228039041703632A25.38598047914818 25.38598047914818 0 0 1 432.3859804791482 37.61401952085181L432.3859804791482 87.53504880212955A25.38598047914818 25.38598047914818 0 0 1 407 112.92102928127773L402 112.92102928127773L402 97.53504880212955L407 97.53504880212955A10 10 0 0 0 417 87.53504880212955L417 37.61401952085181A10 10 0 0 0 407 27.614019520851812L265 27.614019520851812A10 10 0 0 0 255 37.61401952085181L255 42.61401952085181A10 10 0 0 0 265 52.61401952085181L270 52.61401952085181Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M290,93.38598047914819C336,93.38598047914819 336,112.92102928127774 382,112.92102928127774L382,143.6929902395741C336,143.6929902395741 336,124.15794143744456 290,124.15794143744456Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(102.000,214.921)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744455" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.278970718722274)">A</text></g><g class="sankey-node" transform="translate(46.000,162.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148202" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.8929902395741)">B</text></g><g class="sankey-node" transform="translate(270.000,52.614)" style="opacity: 1;"><rect class="node-rect" width="20" height="30.771960958296376" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,19.585980479148187)">C</text></g><g class="sankey-node" transform="translate(382.000,97.535)" style="opacity: 1;"><rect class="node-rect" width="20" height="76.9299023957409" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,42.66495119787045)">D</text></g><g class="sankey-node" transform="translate(158.000,60.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148174" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.892990239574086)">E</text></g><g class="sankey-node" transform="translate(270.000,93.386)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744456" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.27897071872228)">F</text></g></g></g><defs id="topdefs-e83112"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="360" y="50" text-anchor="middle" dy="0em">Sankey with manually positioned node</text></g><g class="first-render"/></g></svg>

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="720" height="520" style="" viewBox="0 0 720 520"><rect x="0" y="0" width="720" height="520" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M122,214.9210292812777C196,214.9210292812777 196,93.38598047914819 270,93.38598047914819L270,108.77196095829636C196,108.77196095829636 196,230.3070097604259 122,230.3070097604259Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M122,230.30700976042587C252,230.30700976042587 252,143.6929902395741 382,143.6929902395741L382,174.46495119787045C252,174.46495119787045 252,261.07897071872225 122,261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M66,162.3070097604259C112,162.3070097604259 112,60.307009760425906 158,60.307009760425906L158,75.69299023957409C112,75.69299023957409 112,177.6929902395741 66,177.6929902395741Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M290,52.61401952085181C336,52.61401952085181 336,97.53504880212955 382,97.53504880212955L382,112.92102928127773C336,112.92102928127773 336,68 290,68Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M 102 245.69299023957404 L97 245.69299023957404A25.38598047914818 25.38598047914818 0 0 0 71.61401952085183 271.07897071872225L71.61401952085183 276.07897071872225A25.38598047914818 25.38598047914818 0 0 0 97 301.46495119787045L295 301.46495119787045A25.38598047914818 25.38598047914818 0 0 0 320.3859804791482 276.07897071872225L320.3859804791482 149.54392191659275A25.38598047914818 25.38598047914818 0 0 0 295 124.15794143744456L290 124.15794143744456L290 139.54392191659275L295 139.54392191659275A10 10 0 0 1 305 149.54392191659275L305 276.07897071872225A10 10 0 0 1 295 286.07897071872225L97 286.07897071872225A10 10 0 0 1 87 276.07897071872225L87 271.07897071872225A10 10 0 0 1 97 261.07897071872225L102 261.07897071872225Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M178,60.307009760425906C224,60.307009760425906 224,68 270,68L270,83.38598047914817C224,83.38598047914817 224,75.69299023957409 178,75.69299023957409Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M 270 68 L265 68A25.38598047914818 25.38598047914818 0 0 1 239.6140195208518 42.61401952085181L239.6140195208518 37.61401952085181A25.38598047914818 25.38598047914818 0 0 1 265 12.228039041703632L407 12.228039041703632A25.38598047914818 25.38598047914818 0 0 1 432.3859804791482 37.61401952085181L432.3859804791482 87.53504880212955A25.38598047914818 25.38598047914818 0 0 1 407 112.92102928127773L402 112.92102928127773L402 97.53504880212955L407 97.53504880212955A10 10 0 0 0 417 87.53504880212955L417 37.61401952085181A10 10 0 0 0 407 27.614019520851812L265 27.614019520851812A10 10 0 0 0 255 37.61401952085181L255 42.61401952085181A10 10 0 0 0 265 52.61401952085181L270 52.61401952085181Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M290,93.38598047914819C336,93.38598047914819 336,112.92102928127774 382,112.92102928127774L382,143.6929902395741C336,143.6929902395741 336,124.15794143744456 290,124.15794143744456Z"/></g>') > 0);
          assert.ok(body.indexOf('<g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(102.000,214.921)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744455" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.278970718722274)">A</text></g><g class="sankey-node" transform="translate(46.000,162.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148202" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.8929902395741)">B</text></g><g class="sankey-node" transform="translate(270.000,52.614)" style="opacity: 1;"><rect class="node-rect" width="20" height="30.771960958296376" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,19.585980479148187)">C</text></g><g class="sankey-node" transform="translate(382.000,97.535)" style="opacity: 1;"><rect class="node-rect" width="20" height="76.9299023957409" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,42.66495119787045)">D</text></g><g class="sankey-node" transform="translate(158.000,60.307)" style="opacity: 1;"><rect class="node-rect" width="20" height="15.385980479148174" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,11.892990239574086)">E</text></g><g class="sankey-node" transform="translate(270.000,93.386)" style="opacity: 1;"><rect class="node-rect" width="20" height="46.15794143744456" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,27.27897071872228)">F</text></g></g></g><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="360" y="50" text-anchor="middle" dy="0em">Sankey with manually positioned node</text></g><g class="first-render"/></g></svg>') > 0);
        });
      });
    });

    it('Node Alignment', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      // Data taken from https://plotly.com/javascript/sankey-diagram/#node-alignment example.
      const payload = `{
                         "data": [
                           {
                             "type": "sankey",
                             "orientation": "h",
                             "node": {
                               "label": [ "0", "1", "2", "3", "4", "5" ],
                               "align": "right"
                             },
                             "link": {
                               "source": [ 0, 1, 4, 2, 1 ],
                               "target": [ 1, 4, 5, 4, 3 ],
                               "value": [ 4, 2, 3, 1, 2 ]
                             }
                           }
                         ],
                         "layout": {
                           "title": {
                             "text": "Align Nodes (Right)"
                           },
                           "font": {
                             "size": 10
                           }
                         }
                       }`;
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));

          // Browser-based answer would be something like
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-0127e0"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricprecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M20,10.0519936903668C96.66666666666667,10.0519936903668 96.66666666666667,-1.7053025658242404e-13 173.33333333333334,-1.7053025658242404e-13L173.33333333333334,199.99999999999983C96.66666666666667,199.99999999999983 96.66666666666667,210.0519936903668 20,210.0519936903668Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M193.33333333333334,99.99999999999983C270,99.99999999999983 270,89.44220970652458 346.6666666666667,89.44220970652458L346.6666666666667,189.44220970652458C270,189.44220970652458 270,199.99999999999983 193.33333333333334,199.99999999999983Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M366.6666666666667,89.44220970652458C443.33333333333337,89.44220970652458 443.33333333333337,120.0000000000002 520,120.0000000000002L520,270.0000000000002C443.33333333333337,270.0000000000002 443.33333333333337,239.44220970652458 366.6666666666667,239.44220970652458Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M193.33333333333334,219.9999999999999C270,219.9999999999999 270,189.44220970652458 346.6666666666667,189.44220970652458L346.6666666666667,239.44220970652458C270,239.44220970652458 270,269.9999999999999 193.33333333333334,269.9999999999999Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0px; opacity: 1;" d="M193.33333333333334,-1.7053025658242404e-13C356.6666666666667,-1.7053025658242404e-13 356.6666666666667,1.4210854715202004e-13 520,1.4210854715202004e-13L520,100.00000000000014C356.6666666666667,100.00000000000014 356.6666666666667,99.99999999999983 193.33333333333334,99.99999999999983Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,10.052)" style="opacity: 1;"><rect class="node-rect" width="20" height="199.99999999999994" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.49999999999997)">0</text></g><g class="sankey-node" transform="translate(173.333,-0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="200.00000000000006" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.50000000000003)">1</text></g><g class="sankey-node" transform="translate(173.333,220.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="50.000000000000114" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,28.500000000000057)">2</text></g><g class="sankey-node" transform="translate(520.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="100.00000000000006" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,53.50000000000003)">3</text></g><g class="sankey-node" transform="translate(346.667,89.442)" style="opacity: 1;"><rect class="node-rect" width="20" height="150.0000000000001" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,78.50000000000006)">4</text></g><g class="sankey-node" transform="translate(520.000,120.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="149.9999999999998" style="stroke-width: 0.5px; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: rgb(255, 255, 255) 1px 1px 1px, rgb(255, 255, 255) -1px -1px 1px, rgb(255, 255, 255) 1px -1px 1px, rgb(255, 255, 255) -1px 1px 1px; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,78.4999999999999)">5</text></g></g></g><defs id="topdefs-0127e0"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Align Nodes (Right)</text></g><g class="first-render"/></g></svg>

          // Current server response is visually the same.
          // <svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs-b42a2e"><g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M20,10.0519936903668C96.66666666666667,10.0519936903668 96.66666666666667,-1.7053025658242404e-13 173.33333333333334,-1.7053025658242404e-13L173.33333333333334,199.99999999999983C96.66666666666667,199.99999999999983 96.66666666666667,210.0519936903668 20,210.0519936903668Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,99.99999999999983C270,99.99999999999983 270,89.44220970652458 346.6666666666667,89.44220970652458L346.6666666666667,189.44220970652458C270,189.44220970652458 270,199.99999999999983 193.33333333333334,199.99999999999983Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M366.6666666666667,89.44220970652458C443.33333333333337,89.44220970652458 443.33333333333337,120.0000000000002 520,120.0000000000002L520,270.0000000000002C443.33333333333337,270.0000000000002 443.33333333333337,239.44220970652458 366.6666666666667,239.44220970652458Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,219.9999999999999C270,219.9999999999999 270,189.44220970652458 346.6666666666667,189.44220970652458L346.6666666666667,239.44220970652458C270,239.44220970652458 270,269.9999999999999 193.33333333333334,269.9999999999999Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,-1.7053025658242404e-13C356.6666666666667,-1.7053025658242404e-13 356.6666666666667,1.4210854715202004e-13 520,1.4210854715202004e-13L520,100.00000000000014C356.6666666666667,100.00000000000014 356.6666666666667,99.99999999999983 193.33333333333334,99.99999999999983Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,10.052)" style="opacity: 1;"><rect class="node-rect" width="20" height="199.99999999999994" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.49999999999997)">0</text></g><g class="sankey-node" transform="translate(173.333,-0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="200.00000000000006" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.50000000000003)">1</text></g><g class="sankey-node" transform="translate(173.333,220.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="50.000000000000114" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,28.500000000000057)">2</text></g><g class="sankey-node" transform="translate(520.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="100.00000000000006" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,53.50000000000003)">3</text></g><g class="sankey-node" transform="translate(346.667,89.442)" style="opacity: 1;"><rect class="node-rect" width="20" height="150.0000000000001" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,78.50000000000006)">4</text></g><g class="sankey-node" transform="translate(520.000,120.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="149.9999999999998" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,78.4999999999999)">5</text></g></g></g><defs id="topdefs-b42a2e"><g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Align Nodes (Right)</text></g><g class="first-render"/></g></svg>

          // Check partial matches, avoiding the random id bits.
          assert.ok(body.indexOf('<svg class="main-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="700" height="450" style="" viewBox="0 0 700 450"><rect x="0" y="0" width="700" height="450" style="fill: rgb(255, 255, 255); fill-opacity: 1;"/><defs id="defs') >= 0);
          assert.ok(body.indexOf('<g class="clips"/><g class="gradients"/><g class="patterns"/></defs><g class="bglayer"/><g class="layer-below"><g class="imagelayer"/><g class="shapelayer"/></g><g class="cartesianlayer"/><g class="polarlayer"/><g class="smithlayer"/><g class="ternarylayer"/><g class="geolayer"/><g class="funnelarealayer"/><g class="pielayer"/><g class="iciclelayer"/><g class="treemaplayer"/><g class="sunburstlayer"/><g class="glimages"/><g class="sankey" style="box-sizing: content-box; position: absolute; left: 0px; shape-rendering: geometricPrecision; pointer-events: none;" transform="translate(80,100)matrix(1 0 0 1 0 0)"><g class="sankey-links" style="fill: none;"><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M20,10.0519936903668C96.66666666666667,10.0519936903668 96.66666666666667,-1.7053025658242404e-13 173.33333333333334,-1.7053025658242404e-13L173.33333333333334,199.99999999999983C96.66666666666667,199.99999999999983 96.66666666666667,210.0519936903668 20,210.0519936903668Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,99.99999999999983C270,99.99999999999983 270,89.44220970652458 346.6666666666667,89.44220970652458L346.6666666666667,189.44220970652458C270,189.44220970652458 270,199.99999999999983 193.33333333333334,199.99999999999983Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M366.6666666666667,89.44220970652458C443.33333333333337,89.44220970652458 443.33333333333337,120.0000000000002 520,120.0000000000002L520,270.0000000000002C443.33333333333337,270.0000000000002 443.33333333333337,239.44220970652458 366.6666666666667,239.44220970652458Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,219.9999999999999C270,219.9999999999999 270,189.44220970652458 346.6666666666667,189.44220970652458L346.6666666666667,239.44220970652458C270,239.44220970652458 270,269.9999999999999 193.33333333333334,269.9999999999999Z"/><path class="sankey-link" style="stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(0, 0, 0); fill-opacity: 0.2; stroke-width: 0; opacity: 1;" d="M193.33333333333334,-1.7053025658242404e-13C356.6666666666667,-1.7053025658242404e-13 356.6666666666667,1.4210854715202004e-13 520,1.4210854715202004e-13L520,100.00000000000014C356.6666666666667,100.00000000000014 356.6666666666667,99.99999999999983 193.33333333333334,99.99999999999983Z"/></g><g class="sankey-node-set" style="cursor: move;"><g class="sankey-node" transform="translate(0.000,10.052)" style="opacity: 1;"><rect class="node-rect" width="20" height="199.99999999999994" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(31, 119, 180); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.49999999999997)">0</text></g>') > 0);
          assert.ok(body.indexOf('<g class="sankey-node" transform="translate(173.333,-0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="200.00000000000006" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(255, 127, 14); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,103.50000000000003)">1</text></g><g class="sankey-node" transform="translate(173.333,220.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="50.000000000000114" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(44, 160, 44); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,28.500000000000057)">2</text></g><g class="sankey-node" transform="translate(520.000,0.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="100.00000000000006" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(214, 39, 40); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,53.50000000000003)">3</text></g><g class="sankey-node" transform="translate(346.667,89.442)" style="opacity: 1;"><rect class="node-rect" width="20" height="150.0000000000001" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(148, 103, 189); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="start" transform="translate(23.25,78.50000000000006)">4</text></g><g class="sankey-node" transform="translate(520.000,120.000)" style="opacity: 1;"><rect class="node-rect" width="20" height="149.9999999999998" style="stroke-width: 0.5; stroke: rgb(68, 68, 68); stroke-opacity: 1; fill: rgb(140, 86, 75); fill-opacity: 0.8;"/><text class="node-label" style="cursor: default; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 10px; fill: rgb(68, 68, 68); fill-opacity: 1; text-shadow: 1px 1px 1px #fff, -1px -1px 1px #fff, 1px -1px 1px #fff, -1px 1px 1px #fff; white-space: pre;" data-notex="1" x="0" y="0" text-anchor="end" transform="translate(-3.25,78.4999999999999)">5</text></g></g></g><defs id="topdefs') > 0);
          assert.ok(body.indexOf('<g class="clips"/></defs><g class="layer-above"><g class="imagelayer"/><g class="shapelayer"/></g><g class="infolayer"><g class="g-gtitle"><text class="gtitle" style="opacity: 1; font-family: TOBESTRIPPEDOpen SansTOBESTRIPPED, verdana, arial, sans-serif; font-size: 14px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;" x="350" y="50" text-anchor="middle" dy="0em">Align Nodes (Right)</text></g><g class="first-render"/></g></svg>') > 0);
        });
      });
    });

/*
    it('request with different data', () => {
      const options = {
        port: 3000,
        host: 'localhost',
        method: 'POST'
      };

      const req = http.request(options);
      const payload = '{ "x": ["2013-10-04 22:23:00", "2013-11-04 22:23:00", "2013-12-04 22:23:00"], "y": [1, 3, 6], "type": "scatter" }';
      req.write(payload);
      req.end();

      req.on('response', (response) => {
        assert.strictEqual(200, response.statusCode);
        let body = '';
        response.on('data', (chunk) => {
          body += chunk;
        });
        response.on('end', () => {
          assert.ok(body.startsWith('<svg'));
          assert.ok(body.endsWith('</svg>'));
          assert.ok(body.indexOf('width="700"') > 0);
          assert.ok(body.indexOf('height="400"') > 0);
        });
      });
    });
    */
  });
});
